snippet plugin "Creates a new javascript/jQuery plugin" b
/**
 * ${4:This is $1}
 */
(function(${1:plugin}, $, undefined) {

    $.fn.$1 = function(options)  {

        var options = $.extend({}, $.fn.$1.defaults, options );

        return this.each( function() {
            $1.init( $(this), options);
        });

    };

    $1.init = function(el)  {

        ${2:// Code}

    };

    $.fn.$1.defaults = {
        ${3}
    };

})(window.$1 = window.$1 || {}, jQuery);
endsnippet


snippet tthis "Description" b
var $this = $(this);

endsnippet

snippet ifempty "Checks if an input is empty" !b
if(!$.trim(this.value).length) {
    $0
}
endsnippet

snippet on "adds jquery on event listener" 
on( '${1:event}', '${2:elements}', function(e) {
    $0
}
endsnippet

snippet on "adds jquery on event listener" !b
$('${1:parent}').on( '${2:event}', '${3:elements}', function(e) {
    $0
}
endsnippet

snippet grunt "Create gruntfile" !b
module.exports = function(grunt) {

	// Load the Grunt plugin(s)
	grunt.loadNpmTasks('');

	// Grunt configuration
	grunt.initConfig({
		pkg: grunt.file.readJSON('package.json'),

		${1:task}: {
			${2:options}: {
				$0
			}
		}

	});

	// Default task(s).
	grunt.registerTask('default', [$1]);

};
endsnippet
